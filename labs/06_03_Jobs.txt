
wget https://kubernetes.io/examples/controllers/job.yaml
kubectl apply -f https://kubernetes.io/examples/controllers/job.yaml

vim job.yaml
"""
apiVersion: batch/v1
kind: Job
metadata:
  name: pi
spec:
  template:
    spec:
      containers:
      - name: pi
        image: perl:5.34.0
        command: ["perl",  "-Mbignum=bpi", "-wle", "print bpi(2000)"]
      restartPolicy: Never
  backoffLimit: 4
"""

kubectl describe job pi
kubectl get job pi -o yaml
kubectl get pods
pods=$(kubectl get pods --selector=batch.kubernetes.io/job-name=pi --output=jsonpath='{.items[*].metadata.name}')
echo $pods

kubectl logs $pods
kubectl logs jobs/pi

#

cp job.yaml job-sleepy.yaml
vim job-sleepy.yaml
"""
spec:
  template:
    spec:
      containers:
      - name: resting
        image: busybox
        command: ["/bin/sleep"]
        args: ["3"]
      restartPolicy: Never
  backoffLimit: 4
"""

kubectl create -f job.yaml
kubectl get job
kubectl describe jobs.batch sleepy
kubectl get job
kubectl get jobs.batch sleepy -o yaml
kubectl delete jobs.batch sleepy
vim job.yaml
"""
spec:
  completions: 5
  template:
    spec:
      containers:
      - name: resting
        image: busybox
        command: ["/bin/sleep"]
        args: ["3"]
      restartPolicy: Never
  backoffLimit: 4
"""
kubectl create -f job.yaml
kubectl get jobs.batch
kubectl get pods
kubectl get jobs
kubectl delete jobs.batch sleepy

vim job.yaml
"""
spec:
  completions: 5
  parallelism: 2
  template:
    spec:
      containers:
      - name: resting
        image: busybox
        command: ["/bin/sleep"]
        args: ["3"]
      restartPolicy: Never
  backoffLimit: 4
"""

kubectl create -f job.yaml
kubectl get pods
kubectl get jobs
vim job.yaml
"""
spec:
  completions: 5
  parallelism: 2
  activeDeadlineSeconds: 15
  template:
    spec:
      containers:
      - name: resting
        image: busybox
        command: ["/bin/sleep"]
        args: ["5"]
      restartPolicy: Never
  backoffLimit: 4
"""

kubectl delete jobs.batch sleepy
kubectl create -f job.yaml
kubectl get jobs
kubectl get jobs

kubectl get job sleepy -o yaml
kubectl delete jobs.batch sleepy

#
# Create a CronJob
#

vim cronjob-sleepy.yaml
"""
apiVersion: batch/v1
kind: CronJob
metadata:
  name: sleepy
spec:
  schedule: "*/2 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: resting
            image: busybox
            command: ["/bin/sleep"]
            args: ["5"]
          restartPolicy: Never
"""

kubectl create -f cronjob-sleepy.yaml
kubectl get cronjobs.batch
kubectl get jobs.batch
kubectl get cronjobs.batch
kubectl get jobs.batch
kubectl get jobs.batch

vim cronjob-sleepy.yaml
"""
apiVersion: batch/v1
kind: CronJob
metadata:
  name: sleepy
spec:
  schedule: "*/2 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          activeDeadlineSeconds: 10
          containers:
          - name: resting
            image: busybox
            command: ["/bin/sleep"]
            args: ["10"]
          restartPolicy: Never
"""

kubectl delete cronjobs.batch sleepy
kubectl create -f cronjob.yaml
kubectl get jobs
kubectl get cronjobs.batch
kubectl get jobs
kubectl get jobs
kubectl get cronjobs.batch
kubectl delete cronjobs.batch sleepy



















