
# List the current namespaces in a cluster
kubectl get namespace

# Kubernetes starts with four initial namespaces:
# - default
# Kubernetes includes this namespace so that you can start using your new cluster without first creating a namespace.
# - kube-node-lease
# This namespace holds Lease objects associated with each node. Node leases allow the kubelet to send heartbeats so that the control plane can detect node failure.
# - kube-public
# This namespace is readable by all clients (including those not authenticated). This namespace is mostly reserved for cluster usage, in case that some resources should be visible and readable publicly throughout the whole cluster. 
# - kube-system
# The namespace for objects created by the Kubernetes system.

# summary of a specific namespace:
kubectl get namespaces <name>

# get detailed information
kubectl describe namespaces <name>

# Create namespace
vim my-namespace.yaml
...
apiVersion: v1
kind: Namespace
metadata:
  name: <insert-namespace-name-here>
...
kubectl create -f ./my-namespace.yaml

# Alternatively, you can create namespace using:
kubectl create namespace <insert-namespace-name-here>

# Deleting a namespace:
kubectl delete -f ./my-namespace.yaml
kubectl delete namespaces <insert-some-namespace-name>

kubectl get namespaces

kubectl create -f https://k8s.io/examples/admin/namespace-dev.json
kubectl create -f https://k8s.io/examples/admin/namespace-prod.json

kubectl get pods --namespace=development
kubectl run nginx --image=nginx --namespace=development
kubectl get pods --namespace=development
kubectl delete pod nginx -n=development

kubectl config view --minify | grep namespace:
kubectl config set-context --current --namespace=development
kubectl config view --minify | grep namespace:

kubectl get namespaces --show-labels

kubectl create deployment snowflake --image=registry.k8s.io/serve_hostname -n=development --replicas=2

kubectl get deployment -n=development

kubectl get pods -l app=snowflake -n=development

kubectl get deployment -n=production

kubectl get pods -n=production

kubectl create deployment cattle --image=registry.k8s.io/serve_hostname -n=production

kubectl scale deployment cattle --replicas=5 -n=production

kubectl get deployment -n=production

kubectl get pods -l app=cattle -n=production

kubectl delete deployment cattle -n=production

kubectl delete deployment snowflake -n=development

kubectl delete -f https://k8s.io/examples/admin/namespace-dev.json

kubectl delete -f https://k8s.io/examples/admin/namespace-prod.json




